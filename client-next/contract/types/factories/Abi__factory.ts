/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { Abi, AbiInterface } from "../Abi";

const _abi = [
  {
    type: "error",
    name: "SendEth__InvalidAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "SendEth__NotEnoughBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "SendEth__ReceiverNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "SendEth__TransferFailed",
    inputs: [],
  },
  {
    type: "event",
    anonymous: false,
    name: "TransferSuccess",
    inputs: [
      {
        type: "address",
        name: "sender",
        indexed: true,
      },
      {
        type: "address",
        name: "receiver",
        indexed: true,
      },
      {
        type: "uint256",
        name: "amount",
        indexed: false,
      },
      {
        type: "uint256",
        name: "timestamp",
        indexed: false,
      },
    ],
  },
  {
    type: "function",
    name: "myTransactions",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [
      {
        type: "tuple[]",
        components: [
          {
            type: "address",
            name: "sender",
          },
          {
            type: "address",
            name: "receiver",
          },
          {
            type: "uint256",
            name: "amount",
          },
          {
            type: "string",
            name: "message",
          },
          {
            type: "uint256",
            name: "datetime",
          },
        ],
      },
    ],
  },
  {
    type: "function",
    name: "transferETH",
    constant: false,
    stateMutability: "payable",
    payable: true,
    inputs: [
      {
        type: "address",
        name: "_receiver",
      },
      {
        type: "string",
        name: "_message",
      },
    ],
    outputs: [],
  },
] as const;

export class Abi__factory {
  static readonly abi = _abi;
  static createInterface(): AbiInterface {
    return new utils.Interface(_abi) as AbiInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Abi {
    return new Contract(address, _abi, signerOrProvider) as Abi;
  }
}
